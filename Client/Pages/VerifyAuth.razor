@using System.Security.Claims

@page "/verifyauth"

<h3>VerifyAuth</h3>

if (isAuthenticated) {
    <h4>@userName is authenticated</h4>
    <ul>
        <li>Access to Admin Role: @isAdmin</li>
        <li>Access to Cashier Role: @isCashier</li>
        <li>Access to Manager Role: @isManager</li>
    </ul>
} 
else {
    <h4>The user is not authenticated</h4>
}

@code {
    [CascadingParameter] public Task<AuthenticationState> AuthState { get; set; }

    private bool isAuthenticated = false;
    private string userName = string.Empty;
    private bool isAdmin = false;
    private bool isCashier = false;
    private bool isManager = false;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthState;
        if (authState.User.Identity.IsAuthenticated)
        {
            isAuthenticated = true;

            userName = authState.User.FindFirst(ClaimTypes.Name).Value;

            isAdmin = authState.User.IsInRole("Admin");
            isCashier = authState.User.IsInRole("Cashier");
            isManager = authState.User.IsInRole("Manager");
        }
    }
}
